{"version":3,"sources":["components/SplashScreen.js","components/ShowPage.js","utils/Types.js","actions/workers/index.js","utils/constants.js","actions/index.js","style/HeaderText.js","components/NavBar.js","components/CategoryCard.js","utils/countriesCodes.js","style/CategoryStyle.js","components/Category.js","components/EventCard.js","components/Container.js","components/App.js","reportWebVitals.js","store/initState.js","reducers/events.js","reducers/filter.js","reducers/index.js","store/index.js","index.js"],"names":["SplashScreen","className","xmlns","width","height","fill","viewBox","d","connect","state","events","props","useState","event","setEvent","loading","setLoading","param","useParams","history","useHistory","useEffect","showEvent","filter","ele","id","alt","src","images","url","name","dates","start","localDate","_embedded","venues","country","postalCode","address","line1","promoter","onClick","push","type","GET_ALL_EVENTS","GET_EVENT_BY_COUNTRY","getEvents","num","a","fetch","response","ok","json","data","getEventByCode","code","payload","Header","Styled","h1","mapDispatchToProps","CategoryCard","onclick","countryCodes","MainCategoryDiv","div","map","item","toString","EventCard","histroy","stateCode","size","dispatch","getAllEvents","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","eventsReducer","actions","filterReducer","action","rootReducer","combineReducers","reduxEnhancer","composeWithDevTools","applyMiddleware","thunkMiddleware","store","createStore","ReactDOM","render","StrictMode","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.8f181b01.chunk.js","sourcesContent":["const SplashScreen = () => (\n  <div className=\"w-screen h-screen bg-blue-200 flex justify-center items-center\">\n    <div className=\"relative animate-pulse\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" fill=\"currentColor\" className=\"bi bi-circle absolute animate-bounce \" viewBox=\"0 0 16 16\">\n        <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\n      </svg>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" fill=\"currentColor\" className=\"bi bi-circle-half absolute animate-spin \" viewBox=\"0 0 16 16\">\n        <path d=\"M8 15A7 7 0 1 0 8 1v14zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16z\" />\n      </svg>\n    </div>\n  </div>\n);\n\nexport default SplashScreen;\n","/* eslint-disable no-underscore-dangle */\nimport { useParams, useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport SplashScreen from './SplashScreen';\n\nconst ShowPage = (props) => {\n  const [event, setEvent] = useState();\n  const [loading, setLoading] = useState(true);\n  const { events } = props;\n  const { param } = useParams();\n  const history = useHistory();\n\n  useEffect(() => {\n    const showEvent = events.filter((ele) => (ele.id === param));\n    setEvent(showEvent);\n    setLoading(false);\n    return () => event;\n  }, []);\n\n  return loading || !event ? <SplashScreen /> : (\n    <div className=\"flex  flex-col items-center gap-1 pb-2 bg-indigo-100 h-screen overflow-scroll\">\n\n      <img className=\"w-full max-h-96 object-cover shadow-xl  \" alt=\"event mg\" src={event[0].images[9].url} />\n      <div className=\"flex flex-col gap-2\">\n        <h2 className=\"text-center text-xl font-semibold text-gray-700\"> Event Title </h2>\n        <p className=\"text-center text-gray-600 text-sm\">\n\n          {event[0].name}\n          {' '}\n        </p>\n        <small className=\"text-center text-xs leading-tight font-light\">\n          {' '}\n          {event[0].dates.start.localDate}\n          {' '}\n        </small>\n      </div>\n      <div className=\"flex flex-col gap-1\">\n        <h2 className=\"text-center text-xl font-semibold text-gray-700\">  Event Location </h2>\n        <p className=\"text-center text-gray-600 text-sm flex flex-col\">\n          Country:\n\n          <span>\n            {' '}\n            {event[0]._embedded.venues[0].country.name}\n          </span>\n          {' '}\n        </p>\n        <p className=\"text-center text-gray-600 text-sm flex flex-col\">\n          Venue:\n          {' '}\n          <span>{event[0]._embedded.venues[0].name}</span>\n          {' '}\n        </p>\n        <p className=\"text-center text-gray-600 text-sm flex flex-col\">\n          PostalCode:\n          {' '}\n          <span>{event[0]._embedded.venues[0].postalCode}</span>\n          {' '}\n        </p>\n        <p className=\"text-center text-gray-600 text-sm flex flex-col\">\n          Address:\n          {' '}\n          <span>{event[0]._embedded.venues[0].address.line1}</span>\n          {' '}\n        </p>\n        <p className=\"text-center text-gray-600 text-sm flex flex-col\">\n          Promoter:\n          {' '}\n          <span>{event[0].promoter.name}</span>\n          {' '}\n        </p>\n\n      </div>\n      <button onClick={() => history.push('/')} className=\"bg-blue-500 text-gray-200 p-2 w-6/12 rounded\" type=\"button\"> Go Back </button>\n\n    </div>\n  );\n};\n\nShowPage.propTypes = {\n  events: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  events: state.events,\n});\n\nexport default connect(mapStateToProps)(ShowPage);\n","export const GET_ALL_EVENTS = 'GET_ALL_EVENTS';\nexport const GET_EVENT_BY_COUNTRY = 'MY_FILTER';\nexport const GET_EVENT_BY_ID = 'ID_FILTER';\nexport const EVENT = 'EVENT';\n","import { EVENTS_URL } from '../../utils/constants';\n\nexport const getEvents = async (num) => {\n  try {\n    const response = await fetch(EVENTS_URL(num));\n    if (!response.ok) {\n      return false;\n    }\n    const data = await response.json();\n\n    return data;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport const getEventByCountry = () => ('');\n","export const EVENTS_URL = (size) => `https://app.ticketmaster.com/discovery/v2/events.json?size=${size}&apikey=qvJS91z3THGXRLihGKEAQ68USVAYffAh`;\nexport const EVENTS_BY_ID_URL = (id) => `https://app.ticketmaster.com/discovery/v2/events/${id}.json?apikey=qvJS91z3THGXRLihGKEAQ68USVAYffAh`;\nexport const EVENTS_BY_COUNTRY_CODE = (size, code) => `https://app.ticketmaster.com/discovery/v2/events.json?countryCode=${code}&size=${size}&apikey=qvJS91z3THGXRLihGKEAQ68USVAYffAh`;\n","import { GET_ALL_EVENTS, GET_EVENT_BY_COUNTRY, EVENT } from '../utils/Types';\nimport { getEvents } from './workers/index';\n\nexport const getAllEvents = (size) => async (dispatch) => {\n  const data = await getEvents(size);\n\n  dispatch({\n    type: GET_ALL_EVENTS,\n    payload: {\n      data,\n    },\n  });\n  return data;\n};\n\nexport const getEventByCode = (code) => ({\n  type: GET_EVENT_BY_COUNTRY,\n  payload: {\n    code,\n  },\n});\n\nexport const showEvent = (id) => ({\n  type: EVENT,\n  payload: {\n    id,\n  },\n});\n","import Styled from 'styled-components';\n\nconst Header = Styled.h1`\n  font-family: 'Pacifico', cursive;\n  font-size: 24px;\n  `;\n\nexport default Header;\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getEventByCode } from '../actions';\nimport Header from '../style/HeaderText';\n\nconst NavBar = ({ filter }) => (\n  <div className=\"flex flex-row justify-between py-2\">\n    <Header>Events Hub</Header>\n    <button type=\"button\" onClick={() => filter('ALL')}> Reset Filter</button>\n  </div>\n);\n\nconst mapDispatchToProps = {\n  filter: (code) => getEventByCode(code),\n};\n\nNavBar.propTypes = {\n  filter: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(NavBar);\n","import PropTypes from 'prop-types';\n\nconst CategoryCard = ({ props, onclick }) => {\n  const { country, code } = props;\n\n  return (\n    <button type=\"button\" onClick={() => onclick(code)} className=\" cursor-pointer bg-blue-700 relative text-gray-200 flex-shrink-0 w-40 p-3 mx-2 flex items-center justify-center rounded-md text-xs text-center\">\n\n      {country}\n    </button>\n\n  );\n};\n\nCategoryCard.propTypes = {\n  props: PropTypes.shape({\n    code: PropTypes.string,\n    id: PropTypes.number,\n  }).isRequired,\n  country: PropTypes.string.isRequired,\n  code: PropTypes.string.isRequired,\n  onclick: PropTypes.func.isRequired,\n};\n\nexport default CategoryCard;\n","const countryCodes = [\n  {\n    id: 1,\n    country: 'New York',\n    code: 'NY',\n  },\n  {\n    id: 2,\n    country: 'Georgia',\n    code: 'GA',\n  },\n  {\n    id: 3,\n    country: 'Texas',\n    code: 'TX',\n  },\n  {\n    id: 4,\n    country: 'West Virginia',\n    code: 'WV',\n  },\n  {\n    id: 5,\n    country: 'Florida',\n    code: 'FL',\n  },\n  {\n    id: 6,\n    country: 'Maryland',\n    code: 'MD',\n  },\n  {\n    id: 7,\n    country: 'Tennessee',\n    code: 'TN',\n  },\n];\n\nexport default countryCodes;\n","import Styled from 'styled-components';\n\nconst MainCategoryDiv = Styled.div`\n    ::-webkit-scrollbar { display: none; };\n    scrollbar-width: none;\n   \n`;\n\nexport default MainCategoryDiv;\n","import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport CategoryCard from './CategoryCard';\nimport countryCodes from '../utils/countriesCodes';\nimport MainCategoryDiv from '../style/CategoryStyle';\nimport { getEventByCode } from '../actions';\n\nconst Category = ({ filter }) => {\n  const onclick = (code) => {\n    filter(code);\n  };\n\n  return (\n\n    <MainCategoryDiv className=\" flex  flex-row overflow-x-scroll overscroll-contain\">\n      {countryCodes.map((item) => (\n        <CategoryCard key={item.id.toString()} props={item} onclick={onclick} />\n      ))}\n    </MainCategoryDiv>\n\n  );\n};\n\nCategory.propTypes = {\n  filter: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = {\n  filter: (code) => getEventByCode(code),\n};\n\nexport default connect(null, mapDispatchToProps)(Category);\n","import PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nconst EventCard = ({ event }) => {\n  const { name, images } = event;\n  const histroy = useHistory();\n\n  return (\n    <button type=\"button\" onClick={() => histroy.push(`/${event.id}`)} className=\"h-40 border-0 transform hover:scale-105 transition duration-00 ease-in outline-none shadow max-w-sm w-full active:outline-none active:border-0 bg-indigo-600 rounded-xl relative flex flex-col\">\n      <img className=\"absolute shadow object-cover w-full h-full rounded-xl  \" src={images[0].url} alt=\"event imgae\" />\n      <p className=\" absolute bottom-0 bg-gray-500 bg-opacity-50 text-sm w-full text-gray-200 rounded-b-xl left-0 pl-2 pb-2\">\n        {name}\n      </p>\n\n    </button>\n  );\n};\n\nEventCard.propTypes = {\n  event: PropTypes.shape({\n    name: PropTypes.string,\n    id: PropTypes.string,\n    images: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default EventCard;\n","/* eslint-disable max-len */\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport EventCard from './EventCard';\n\nconst Container = ({ events, filter }) => (\n  <div className=\"flex flex-row flex-wrap gap-4 justify-center lg:gap-5 md:mt-10\">\n\n    {filter === 'ALL' ? events.map((ele) => (\n      <EventCard key={ele.id} event={ele} />\n\n      // eslint-disable-next-line no-underscore-dangle\n    )) : events.filter((event) => event._embedded.venues[0].state.stateCode === filter).map((ele) => (\n      <EventCard key={ele.id} event={ele} />\n    )) }\n\n  </div>\n);\n\nContainer.propTypes = {\n  events: PropTypes.arrayOf(PropTypes.object).isRequired,\n  filter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({ events: state.events, filter: state.filter });\n\nexport default connect(mapStateToProps)(Container);\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NavBar from './NavBar';\nimport Category from './Category';\nimport { getAllEvents } from '../actions/index';\nimport Container from './Container';\nimport SplashScreen from './SplashScreen';\n\nfunction App({ getEvents, events }) {\n  useEffect(() => {\n    getEvents(200);\n  }, []);\n\n  return events.length > 2 ? (\n    <div className=\"main  px-2 flex flex-col gap-2 overflow-scroll\">\n      <NavBar />\n      <Category />\n      <Container />\n    </div>\n  ) : <SplashScreen />;\n}\n\nApp.propTypes = {\n  getEvents: PropTypes.func.isRequired,\n  events: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nconst mapDispatchToProps = {\n  getEvents: (size) => getAllEvents(size),\n};\n\nconst mapStateToProps = (state) => ({\n  events: state.events,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const initState = [\n\n];\n\nexport const filter = 'ALL';\n","import { GET_ALL_EVENTS } from '../utils/Types';\nimport { initState } from '../store/initState';\n\nconst eventsReducer = (state = initState, actions) => {\n  const { type, payload } = actions;\n  switch (type) {\n    case GET_ALL_EVENTS:\n      // eslint-disable-next-line no-underscore-dangle\n      return [...payload.data._embedded.events];\n\n    default:\n      return state;\n  }\n};\n\nexport default eventsReducer;\n","import { filter } from '../store/initState';\nimport { GET_EVENT_BY_COUNTRY } from '../utils/Types';\n\nconst filterReducer = (state = filter, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_EVENT_BY_COUNTRY:\n      // eslint-disable-next-line no-underscore-dangle\n      return payload.code;\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { combineReducers } from 'redux';\nimport eventsReducer from './events';\nimport filterReducer from './filter';\n\nconst rootReducer = combineReducers({ events: eventsReducer, filter: filterReducer });\n\nexport default rootReducer;\n","/* eslint-disable no-underscore-dangle */\nimport { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers';\n\nconst reduxEnhancer = composeWithDevTools(applyMiddleware(thunkMiddleware));\n\nconst store = createStore(rootReducer, reduxEnhancer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport ShowPage from './components/ShowPage';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <Route exact path=\"/\">\n          <App />\n        </Route>\n        <Route path=\"/:param\">\n          <ShowPage />\n        </Route>\n\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}